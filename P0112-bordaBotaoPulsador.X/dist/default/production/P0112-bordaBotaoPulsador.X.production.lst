

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 14 01:50:52 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368                           
   369                           	psect	idataBANK0
   370  05F8                     __pidataBANK0:	
   371                           
   372                           ;initializer for _digitos7seg
   373  05F8  343F               	retlw	63
   374  05F9  3406               	retlw	6
   375  05FA  345B               	retlw	91
   376  05FB  344F               	retlw	79
   377  05FC  3466               	retlw	102
   378  05FD  346D               	retlw	109
   379  05FE  347D               	retlw	125
   380  05FF  3407               	retlw	7
   381  0600  347F               	retlw	127
   382  0601  346F               	retlw	111
   383  0602  3477               	retlw	119
   384  0603  347C               	retlw	124
   385  0604  3439               	retlw	57
   386  0605  345E               	retlw	94
   387  0606  3479               	retlw	121
   388  0607  3471               	retlw	113
   389  0006                     _PORTB	set	6
   390  0008                     _PORTDbits	set	8
   391  0006                     _PORTBbits	set	6
   392  0086                     _TRISB	set	134
   393  0088                     _TRISDbits	set	136
   394  0189                     _ANSELH	set	393
   395                           
   396                           ; #config settings
   397  0000                     
   398                           	psect	cinit
   399  07ED                     start_initialization:	
   400  07ED                     __initialization:	
   401                           
   402                           ; Initialize objects allocated to BANK0
   403  07ED  1383               	bcf	3,7	;select IRP bank0
   404  07EE  3030               	movlw	low (__pdataBANK0+16)
   405  07EF  00FD               	movwf	btemp+-1
   406  07F0  3005               	movlw	high __pidataBANK0
   407  07F1  00FE               	movwf	btemp
   408  07F2  30F8               	movlw	low __pidataBANK0
   409  07F3  00FF               	movwf	btemp+1
   410  07F4  3020               	movlw	low __pdataBANK0
   411  07F5  0084               	movwf	4
   412  07F6  120A  118A  260C   	fcall	init_ram0
   413                           
   414                           ; Clear objects allocated to BANK0
   415  07F9  01BC               	clrf	__pbssBANK0& (0+127)
   416  07FA  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   417  07FB  01BE               	clrf	(__pbssBANK0+2)& (0+127)
   418  07FC                     end_of_initialization:	
   419                           ;End of C runtime variable initialization code
   420                           
   421  07FC                     __end_of__initialization:	
   422  07FC  0183               	clrf	3
   423  07FD  120A  118A  2F8D   	ljmp	_main	;jump to C main() function
   424                           
   425                           	psect	bssBANK0
   426  003C                     __pbssBANK0:	
   427  003C                     _posicao:	
   428  003C                     	ds	1
   429  003D                     _b1Anterior:	
   430  003D                     	ds	1
   431  003E                     _b0Anterior:	
   432  003E                     	ds	1
   433                           
   434                           	psect	dataBANK0
   435  0020                     __pdataBANK0:	
   436  0020                     _digitos7seg:	
   437  0020                     	ds	16
   438                           
   439                           	psect	inittext
   440  0608                     init_fetch0:	
   441                           ;	Called with low address in FSR and high address in W
   442                           
   443  0608  087E               	movf	126,w
   444  0609  008A               	movwf	10
   445  060A  087F               	movf	127,w
   446  060B  0082               	movwf	2
   447  060C                     init_ram0:	
   448                           ;Called with:
   449                           ;	high address of idata address in btemp 
   450                           ;	low address of idata address in btemp+1 
   451                           ;	low address of data in FSR
   452                           ;	high address + 1 of data in btemp-1
   453                           
   454  060C  2608  120A  118A   	fcall	init_fetch0
   455  060F  0080               	movwf	0
   456  0610  0A84               	incf	4,f
   457  0611  0804               	movf	4,w
   458  0612  067D               	xorwf	125,w
   459  0613  1903               	btfsc	3,2
   460  0614  3400               	retlw	0
   461  0615  0AFF               	incf	127,f
   462  0616  1903               	btfsc	3,2
   463  0617  0AFE               	incf	126,f
   464  0618  2E0C               	goto	init_ram0
   465                           
   466                           	psect	cstackCOMMON
   467  0070                     __pcstackCOMMON:	
   468  0070                     ?_botao_init:	
   469  0070                     ??_botao_init:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_b0_bordaDescida:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ??_b0_bordaDescida:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_b1_bordaSubida:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_b1_bordaSubida:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_delay:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_disp7segX2_init:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_disp7segX2:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_main:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?___awdiv:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     delay@t:	
   500                           ; 2 bytes @ 0x0
   501                           
   502  0070                     ___awdiv@divisor:	
   503                           ; 2 bytes @ 0x0
   504                           
   505                           
   506                           ; 2 bytes @ 0x0
   507  0070                     	ds	1
   508  0071                     b0_bordaDescida@aux:	
   509  0071                     b1_bordaSubida@aux:	
   510                           ; 1 bytes @ 0x1
   511                           
   512                           
   513                           ; 1 bytes @ 0x1
   514  0071                     	ds	1
   515  0072                     ??_delay:	
   516  0072                     _b0_bordaDescida$114:	
   517                           ; 1 bytes @ 0x2
   518                           
   519  0072                     _b1_bordaSubida$122:	
   520                           ; 1 bytes @ 0x2
   521                           
   522  0072                     ___awdiv@dividend:	
   523                           ; 1 bytes @ 0x2
   524                           
   525                           
   526                           ; 2 bytes @ 0x2
   527  0072                     	ds	1
   528  0073                     ??_disp7segX2_init:	
   529                           
   530                           ; 1 bytes @ 0x3
   531  0073                     	ds	1
   532  0074                     ??___awdiv:	
   533                           
   534                           ; 1 bytes @ 0x4
   535  0074                     	ds	1
   536  0075                     ___awdiv@counter:	
   537                           
   538                           ; 1 bytes @ 0x5
   539  0075                     	ds	1
   540  0076                     ___awdiv@sign:	
   541                           
   542                           ; 1 bytes @ 0x6
   543  0076                     	ds	1
   544  0077                     ___awdiv@quotient:	
   545                           
   546                           ; 2 bytes @ 0x7
   547  0077                     	ds	2
   548  0079                     ?___awmod:	
   549  0079                     ___awmod@divisor:	
   550                           ; 2 bytes @ 0x9
   551                           
   552                           
   553                           ; 2 bytes @ 0x9
   554  0079                     	ds	2
   555  007B                     ___awmod@dividend:	
   556                           
   557                           ; 2 bytes @ 0xB
   558  007B                     	ds	2
   559  007D                     ??___awmod:	
   560                           
   561                           ; 1 bytes @ 0xD
   562  007D                     	ds	1
   563                           
   564                           	psect	cstackBANK0
   565  0030                     __pcstackBANK0:	
   566  0030                     ___awmod@counter:	
   567                           
   568                           ; 1 bytes @ 0x0
   569  0030                     	ds	1
   570  0031                     ___awmod@sign:	
   571                           
   572                           ; 1 bytes @ 0x1
   573  0031                     	ds	1
   574  0032                     ??_disp7segX2:	
   575                           
   576                           ; 1 bytes @ 0x2
   577  0032                     	ds	2
   578  0034                     disp7segX2@num:	
   579                           
   580                           ; 1 bytes @ 0x4
   581  0034                     	ds	1
   582  0035                     ??_main:	
   583                           
   584                           ; 1 bytes @ 0x5
   585  0035                     	ds	4
   586  0039                     _main$188:	
   587                           
   588                           ; 2 bytes @ 0x9
   589  0039                     	ds	2
   590  003B                     main@num:	
   591                           
   592                           ; 1 bytes @ 0xB
   593  003B                     	ds	1
   594                           
   595                           	psect	maintext
   596  078D                     __pmaintext:	
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 31 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  num             1   11[BANK0 ] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : B00/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       3       0       0       0
   618 ;;      Temps:          0       4       0       0       0
   619 ;;      Totals:         0       7       0       0       0
   620 ;;Total ram usage:        7 bytes
   621 ;; Hardware stack levels required when called:    2
   622 ;; This function calls:
   623 ;;		___awmod
   624 ;;		_b0_bordaDescida
   625 ;;		_b1_bordaSubida
   626 ;;		_botao_init
   627 ;;		_delay
   628 ;;		_disp7segX2
   629 ;;		_disp7segX2_init
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _main
   637  078D                     _main:	
   638                           
   639                           ;main.c: 33: char num = 0;
   640                           
   641                           ;incstack = 0
   642                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   643  078D  1283               	bcf	3,5	;RP0=0, select bank0
   644  078E  1303               	bcf	3,6	;RP1=0, select bank0
   645  078F  01BB               	clrf	main@num
   646                           
   647                           ;main.c: 35: disp7segX2_init();
   648  0790  120A  118A  2653  120A  118A  	fcall	_disp7segX2_init
   649                           
   650                           ;main.c: 36: botao_init();
   651  0795  120A  118A  25F3  120A  118A  	fcall	_botao_init
   652  079A                     l1103:	
   653                           ;main.c: 38: while( 1 )
   654                           
   655                           
   656                           ;main.c: 39: {
   657                           ;main.c: 40: disp7segX2( num );
   658  079A  1283               	bcf	3,5	;RP0=0, select bank0
   659  079B  1303               	bcf	3,6	;RP1=0, select bank0
   660  079C  083B               	movf	main@num,w
   661  079D  120A  118A  2734  120A  118A  	fcall	_disp7segX2
   662                           
   663                           ;main.c: 42: if( b1_bordaSubida() )
   664  07A2  120A  118A  263F  120A  118A  	fcall	_b1_bordaSubida
   665  07A7  3A00               	xorlw	0
   666  07A8  1903               	skipnz
   667  07A9  2FC6               	goto	l101
   668                           
   669                           ;main.c: 43: num = ++num % 100;
   670  07AA  3064               	movlw	100
   671  07AB  00F9               	movwf	___awmod@divisor
   672  07AC  3000               	movlw	0
   673  07AD  00FA               	movwf	___awmod@divisor+1
   674  07AE  3001               	movlw	1
   675  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   676  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   677  07B1  00B5               	movwf	??_main
   678  07B2  0835               	movf	??_main,w
   679  07B3  07BB               	addwf	main@num,f
   680  07B4  083B               	movf	main@num,w
   681  07B5  00B6               	movwf	??_main+1
   682  07B6  01B7               	clrf	??_main+2
   683  07B7  0836               	movf	??_main+1,w
   684  07B8  00FB               	movwf	___awmod@dividend
   685  07B9  0837               	movf	??_main+2,w
   686  07BA  00FC               	movwf	___awmod@dividend+1
   687  07BB  120A  118A  268E  120A  118A  	fcall	___awmod
   688  07C0  0879               	movf	?___awmod,w
   689  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   690  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   691  07C3  00B8               	movwf	??_main+3
   692  07C4  0838               	movf	??_main+3,w
   693  07C5  00BB               	movwf	main@num
   694  07C6                     l101:	
   695                           
   696                           ;main.c: 44: if( b0_bordaDescida() )
   697  07C6  120A  118A  262B  120A  118A  	fcall	_b0_bordaDescida
   698  07CB  3A00               	xorlw	0
   699  07CC  1903               	skipnz
   700  07CD  2FE3               	goto	l1115
   701                           
   702                           ;main.c: 45: num = num==0 ? 99 : num-1;
   703  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   704  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   705  07D0  083B               	movf	main@num,w
   706  07D1  1903               	btfsc	3,2
   707  07D2  2FDB               	goto	l1113
   708  07D3  083B               	movf	main@num,w
   709  07D4  3EFF               	addlw	255
   710  07D5  00B9               	movwf	_main$188
   711  07D6  30FF               	movlw	255
   712  07D7  1803               	skipnc
   713  07D8  3000               	movlw	0
   714  07D9  00BA               	movwf	_main$188+1
   715  07DA  2FDF               	goto	l106
   716  07DB                     l1113:	
   717  07DB  3063               	movlw	99
   718  07DC  00B9               	movwf	_main$188
   719  07DD  3000               	movlw	0
   720  07DE  00BA               	movwf	_main$188+1
   721  07DF                     l106:	
   722  07DF  0839               	movf	_main$188,w
   723  07E0  00B5               	movwf	??_main
   724  07E1  0835               	movf	??_main,w
   725  07E2  00BB               	movwf	main@num
   726  07E3                     l1115:	
   727                           
   728                           ;main.c: 47: delay(1);
   729  07E3  3001               	movlw	1
   730  07E4  00F0               	movwf	delay@t
   731  07E5  3000               	movlw	0
   732  07E6  00F1               	movwf	delay@t+1
   733  07E7  120A  118A  2619  120A  118A  	fcall	_delay
   734  07EC  2F9A               	goto	l1103
   735  07ED                     __end_of_main:	
   736                           ;main.c: 48: }
   737                           ;main.c: 49: return;
   738                           
   739                           
   740                           	psect	text1
   741  0653                     __ptext1:	
   742 ;; *************** function _disp7segX2_init *****************
   743 ;; Defined at:
   744 ;;		line 41 in file "disp7seg.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		_delay
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _disp7segX2_init
   774  0653                     _disp7segX2_init:	
   775                           
   776                           ;disp7seg.c: 43: ANSELH = 0;
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in _disp7segX2_init: [wreg+status,2+status,0+pclath+cstack]
   780  0653  1683               	bsf	3,5	;RP0=1, select bank3
   781  0654  1703               	bsf	3,6	;RP1=1, select bank3
   782  0655  0189               	clrf	9	;volatile
   783                           
   784                           ;disp7seg.c: 44: TRISB = 0x00;
   785  0656  1683               	bsf	3,5	;RP0=1, select bank1
   786  0657  1303               	bcf	3,6	;RP1=0, select bank1
   787  0658  0186               	clrf	6	;volatile
   788                           
   789                           ;disp7seg.c: 45: TRISDbits.TRISD7 = 0;
   790  0659  1388               	bcf	8,7	;volatile
   791                           
   792                           ;disp7seg.c: 46: TRISDbits.TRISD6 = 0;
   793  065A  1308               	bcf	8,6	;volatile
   794                           
   795                           ;disp7seg.c: 48: PORTDbits.RD7 = 1;
   796  065B  1283               	bcf	3,5	;RP0=0, select bank0
   797  065C  1303               	bcf	3,6	;RP1=0, select bank0
   798  065D  1788               	bsf	8,7	;volatile
   799                           
   800                           ;disp7seg.c: 49: PORTDbits.RD6 = 1;
   801  065E  1708               	bsf	8,6	;volatile
   802                           
   803                           ;disp7seg.c: 50: PORTB = 0xFF; delay(500);
   804  065F  30FF               	movlw	255
   805  0660  0086               	movwf	6	;volatile
   806  0661  30F4               	movlw	244
   807  0662  00F0               	movwf	delay@t
   808  0663  3001               	movlw	1
   809  0664  00F1               	movwf	delay@t+1
   810  0665  120A  118A  2619  120A  118A  	fcall	_delay
   811                           
   812                           ;disp7seg.c: 51: PORTB = 0x00; delay(500);
   813  066A  1283               	bcf	3,5	;RP0=0, select bank0
   814  066B  1303               	bcf	3,6	;RP1=0, select bank0
   815  066C  0186               	clrf	6	;volatile
   816  066D  30F4               	movlw	244
   817  066E  00F0               	movwf	delay@t
   818  066F  3001               	movlw	1
   819  0670  00F1               	movwf	delay@t+1
   820  0671  120A  118A  2619  120A  118A  	fcall	_delay
   821                           
   822                           ;disp7seg.c: 52: PORTB = 0xFF; delay(500);
   823  0676  30FF               	movlw	255
   824  0677  1283               	bcf	3,5	;RP0=0, select bank0
   825  0678  1303               	bcf	3,6	;RP1=0, select bank0
   826  0679  0086               	movwf	6	;volatile
   827  067A  30F4               	movlw	244
   828  067B  00F0               	movwf	delay@t
   829  067C  3001               	movlw	1
   830  067D  00F1               	movwf	delay@t+1
   831  067E  120A  118A  2619  120A  118A  	fcall	_delay
   832                           
   833                           ;disp7seg.c: 53: PORTB = 0x00; delay(500);
   834  0683  1283               	bcf	3,5	;RP0=0, select bank0
   835  0684  1303               	bcf	3,6	;RP1=0, select bank0
   836  0685  0186               	clrf	6	;volatile
   837  0686  30F4               	movlw	244
   838  0687  00F0               	movwf	delay@t
   839  0688  3001               	movlw	1
   840  0689  00F1               	movwf	delay@t+1
   841  068A  120A  118A  2619   	fcall	_delay
   842  068D  0008               	return
   843  068E                     __end_of_disp7segX2_init:	
   844                           
   845                           	psect	text2
   846  0619                     __ptext2:	
   847 ;; *************** function _delay *****************
   848 ;; Defined at:
   849 ;;		line 10 in file "delay.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  t               2    0[COMMON] unsigned int 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         2       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          1       0       0       0       0
   866 ;;      Totals:         3       0       0       0       0
   867 ;;Total ram usage:        3 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_disp7segX2_init
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _delay
   879  0619                     _delay:	
   880  0619                     l887:	
   881                           ;delay.c: 12: while( t )
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _delay: [wreg+status,2+status,0]
   885                           
   886  0619  0870               	movf	delay@t,w
   887  061A  0471               	iorwf	delay@t+1,w
   888  061B  1903               	btfsc	3,2
   889  061C  0008               	return
   890                           
   891                           ;delay.c: 13: {
   892                           ;delay.c: 14: _delay((unsigned long)((1)*(4000000/4000.0)));
   893  061D  30C7               	movlw	199
   894  061E  00F2               	movwf	??_delay
   895  061F                     u797:	
   896  061F  2E20               	nop2
   897  0620  0BF2               	decfsz	??_delay,f
   898  0621  2E1F               	goto	u797
   899  0622  2E23               	nop2
   900  0623  2E24               	nop2
   901                           
   902                           ;delay.c: 15: --t;
   903  0624  3001               	movlw	1
   904  0625  02F0               	subwf	delay@t,f
   905  0626  3000               	movlw	0
   906  0627  1C03               	skipc
   907  0628  03F1               	decf	delay@t+1,f
   908  0629  02F1               	subwf	delay@t+1,f
   909  062A  2E19               	goto	l887
   910  062B                     __end_of_delay:	
   911                           
   912                           	psect	text3
   913  0734                     __ptext3:	
   914 ;; *************** function _disp7segX2 *****************
   915 ;; Defined at:
   916 ;;		line 57 in file "disp7seg.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  num             1    wreg     unsigned char 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  num             1    4[BANK0 ] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       1       0       0       0
   932 ;;      Temps:          0       2       0       0       0
   933 ;;      Totals:         0       3       0       0       0
   934 ;;Total ram usage:        3 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		___awdiv
   939 ;;		___awmod
   940 ;; This function is called by:
   941 ;;		_main
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           
   946                           ;psect for function _disp7segX2
   947  0734                     _disp7segX2:	
   948                           
   949                           ;incstack = 0
   950                           ; Regs used in _disp7segX2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   951                           ;disp7segX2@num stored from wreg
   952  0734  1283               	bcf	3,5	;RP0=0, select bank0
   953  0735  1303               	bcf	3,6	;RP1=0, select bank0
   954  0736  00B4               	movwf	disp7segX2@num
   955                           
   956                           ;disp7seg.c: 59: switch( posicao )
   957  0737  2F7B               	goto	l1041
   958  0738                     l80:	
   959                           ;disp7seg.c: 60: {
   960                           ;disp7seg.c: 61: case 0:
   961                           
   962                           
   963                           ;disp7seg.c: 62: PORTDbits.RD7 = 0;
   964  0738  1388               	bcf	8,7	;volatile
   965                           
   966                           ;disp7seg.c: 63: PORTB = digitos7seg[num % 10];
   967  0739  300A               	movlw	10
   968  073A  00F9               	movwf	___awmod@divisor
   969  073B  3000               	movlw	0
   970  073C  00FA               	movwf	___awmod@divisor+1
   971  073D  0834               	movf	disp7segX2@num,w
   972  073E  00B2               	movwf	??_disp7segX2
   973  073F  01B3               	clrf	??_disp7segX2+1
   974  0740  0832               	movf	??_disp7segX2,w
   975  0741  00FB               	movwf	___awmod@dividend
   976  0742  0833               	movf	??_disp7segX2+1,w
   977  0743  00FC               	movwf	___awmod@dividend+1
   978  0744  120A  118A  268E  120A  118A  	fcall	___awmod
   979  0749  0879               	movf	?___awmod,w
   980  074A  3E20               	addlw	(low (_digitos7seg| 0))& (0+255)
   981  074B  0084               	movwf	4
   982  074C  1383               	bcf	3,7	;select IRP bank0
   983  074D  0800               	movf	0,w
   984  074E  1283               	bcf	3,5	;RP0=0, select bank0
   985  074F  1303               	bcf	3,6	;RP1=0, select bank0
   986  0750  0086               	movwf	6	;volatile
   987                           
   988                           ;disp7seg.c: 64: PORTDbits.RD6 = 1;
   989  0751  1708               	bsf	8,6	;volatile
   990                           
   991                           ;disp7seg.c: 65: break;
   992  0752  2F83               	goto	l1043
   993  0753                     l82:	
   994                           ;disp7seg.c: 67: case 1:
   995                           
   996                           
   997                           ;disp7seg.c: 68: PORTDbits.RD6 = 0;
   998  0753  1308               	bcf	8,6	;volatile
   999                           
  1000                           ;disp7seg.c: 69: PORTB = digitos7seg[(num / 10) % 10];
  1001  0754  300A               	movlw	10
  1002  0755  00F9               	movwf	___awmod@divisor
  1003  0756  3000               	movlw	0
  1004  0757  00FA               	movwf	___awmod@divisor+1
  1005  0758  300A               	movlw	10
  1006  0759  00F0               	movwf	___awdiv@divisor
  1007  075A  3000               	movlw	0
  1008  075B  00F1               	movwf	___awdiv@divisor+1
  1009  075C  0834               	movf	disp7segX2@num,w
  1010  075D  00B2               	movwf	??_disp7segX2
  1011  075E  01B3               	clrf	??_disp7segX2+1
  1012  075F  0832               	movf	??_disp7segX2,w
  1013  0760  00F2               	movwf	___awdiv@dividend
  1014  0761  0833               	movf	??_disp7segX2+1,w
  1015  0762  00F3               	movwf	___awdiv@dividend+1
  1016  0763  120A  118A  26DB  120A  118A  	fcall	___awdiv
  1017  0768  0871               	movf	?___awdiv+1,w
  1018  0769  00FC               	movwf	___awmod@dividend+1
  1019  076A  0870               	movf	?___awdiv,w
  1020  076B  00FB               	movwf	___awmod@dividend
  1021  076C  120A  118A  268E  120A  118A  	fcall	___awmod
  1022  0771  0879               	movf	?___awmod,w
  1023  0772  3E20               	addlw	(low (_digitos7seg| 0))& (0+255)
  1024  0773  0084               	movwf	4
  1025  0774  1383               	bcf	3,7	;select IRP bank0
  1026  0775  0800               	movf	0,w
  1027  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0778  0086               	movwf	6	;volatile
  1030                           
  1031                           ;disp7seg.c: 70: PORTDbits.RD7 = 1;
  1032  0779  1788               	bsf	8,7	;volatile
  1033                           
  1034                           ;disp7seg.c: 72: }
  1035                           
  1036                           ;disp7seg.c: 71: break;
  1037  077A  2F83               	goto	l1043
  1038  077B                     l1041:	
  1039  077B  083C               	movf	_posicao,w
  1040                           
  1041                           ; Switch size 1, requested type "space"
  1042                           ; Number of cases is 2, Range of values is 0 to 1
  1043                           ; switch strategies available:
  1044                           ; Name         Instructions Cycles
  1045                           ; simple_byte            7     4 (average)
  1046                           ; direct_byte           14     8 (fixed)
  1047                           ; jumptable            260     6 (fixed)
  1048                           ;	Chosen strategy is simple_byte
  1049  077C  3A00               	xorlw	0	; case 0
  1050  077D  1903               	skipnz
  1051  077E  2F38               	goto	l80
  1052  077F  3A01               	xorlw	1	; case 1
  1053  0780  1903               	skipnz
  1054  0781  2F53               	goto	l82
  1055  0782  2F83               	goto	l1043
  1056  0783                     l1043:	
  1057                           
  1058                           ;disp7seg.c: 73: posicao = ++posicao % 2;
  1059  0783  3001               	movlw	1
  1060  0784  00B2               	movwf	??_disp7segX2
  1061  0785  0832               	movf	??_disp7segX2,w
  1062  0786  07BC               	addwf	_posicao,f
  1063  0787  083C               	movf	_posicao,w
  1064  0788  3901               	andlw	1
  1065  0789  00B3               	movwf	??_disp7segX2+1
  1066  078A  0833               	movf	??_disp7segX2+1,w
  1067  078B  00BC               	movwf	_posicao
  1068  078C  0008               	return
  1069  078D                     __end_of_disp7segX2:	
  1070                           
  1071                           	psect	text4
  1072  068E                     __ptext4:	
  1073 ;; *************** function ___awmod *****************
  1074 ;; Defined at:
  1075 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awmod.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  divisor         2    9[COMMON] int 
  1078 ;;  dividend        2   11[COMMON] int 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  sign            1    1[BANK0 ] unsigned char 
  1081 ;;  counter         1    0[BANK0 ] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  2    9[COMMON] int 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         4       0       0       0       0
  1092 ;;      Locals:         0       2       0       0       0
  1093 ;;      Temps:          1       0       0       0       0
  1094 ;;      Totals:         5       2       0       0       0
  1095 ;;Total ram usage:        7 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_disp7segX2
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function ___awmod
  1107  068E                     ___awmod:	
  1108                           
  1109                           ;incstack = 0
  1110                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1111  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1112  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0690  01B1               	clrf	___awmod@sign
  1114  0691  1FFC               	btfss	___awmod@dividend+1,7
  1115  0692  2E9A               	goto	l941
  1116  0693  09FB               	comf	___awmod@dividend,f
  1117  0694  09FC               	comf	___awmod@dividend+1,f
  1118  0695  0AFB               	incf	___awmod@dividend,f
  1119  0696  1903               	skipnz
  1120  0697  0AFC               	incf	___awmod@dividend+1,f
  1121  0698  01B1               	clrf	___awmod@sign
  1122  0699  0AB1               	incf	___awmod@sign,f
  1123  069A                     l941:	
  1124  069A  1FFA               	btfss	___awmod@divisor+1,7
  1125  069B  2EA1               	goto	l945
  1126  069C  09F9               	comf	___awmod@divisor,f
  1127  069D  09FA               	comf	___awmod@divisor+1,f
  1128  069E  0AF9               	incf	___awmod@divisor,f
  1129  069F  1903               	skipnz
  1130  06A0  0AFA               	incf	___awmod@divisor+1,f
  1131  06A1                     l945:	
  1132  06A1  0879               	movf	___awmod@divisor,w
  1133  06A2  047A               	iorwf	___awmod@divisor+1,w
  1134  06A3  1903               	btfsc	3,2
  1135  06A4  2ECE               	goto	l963
  1136  06A5  01B0               	clrf	___awmod@counter
  1137  06A6  0AB0               	incf	___awmod@counter,f
  1138  06A7                     l953:	
  1139  06A7  1BFA               	btfsc	___awmod@divisor+1,7
  1140  06A8  2EB5               	goto	l955
  1141  06A9  3001               	movlw	1
  1142  06AA                     u545:	
  1143  06AA  1003               	clrc
  1144  06AB  0DF9               	rlf	___awmod@divisor,f
  1145  06AC  0DFA               	rlf	___awmod@divisor+1,f
  1146  06AD  3EFF               	addlw	-1
  1147  06AE  1D03               	skipz
  1148  06AF  2EAA               	goto	u545
  1149  06B0  3001               	movlw	1
  1150  06B1  00FD               	movwf	??___awmod
  1151  06B2  087D               	movf	??___awmod,w
  1152  06B3  07B0               	addwf	___awmod@counter,f
  1153  06B4  2EA7               	goto	l953
  1154  06B5                     l955:	
  1155  06B5  087A               	movf	___awmod@divisor+1,w
  1156  06B6  027C               	subwf	___awmod@dividend+1,w
  1157  06B7  1D03               	skipz
  1158  06B8  2EBB               	goto	u565
  1159  06B9  0879               	movf	___awmod@divisor,w
  1160  06BA  027B               	subwf	___awmod@dividend,w
  1161  06BB                     u565:	
  1162  06BB  1C03               	skipc
  1163  06BC  2EC3               	goto	l959
  1164  06BD  0879               	movf	___awmod@divisor,w
  1165  06BE  02FB               	subwf	___awmod@dividend,f
  1166  06BF  087A               	movf	___awmod@divisor+1,w
  1167  06C0  1C03               	skipc
  1168  06C1  03FC               	decf	___awmod@dividend+1,f
  1169  06C2  02FC               	subwf	___awmod@dividend+1,f
  1170  06C3                     l959:	
  1171  06C3  3001               	movlw	1
  1172  06C4                     u575:	
  1173  06C4  1003               	clrc
  1174  06C5  0CFA               	rrf	___awmod@divisor+1,f
  1175  06C6  0CF9               	rrf	___awmod@divisor,f
  1176  06C7  3EFF               	addlw	-1
  1177  06C8  1D03               	skipz
  1178  06C9  2EC4               	goto	u575
  1179  06CA  3001               	movlw	1
  1180  06CB  02B0               	subwf	___awmod@counter,f
  1181  06CC  1D03               	btfss	3,2
  1182  06CD  2EB5               	goto	l955
  1183  06CE                     l963:	
  1184  06CE  0831               	movf	___awmod@sign,w
  1185  06CF  1903               	btfsc	3,2
  1186  06D0  2ED6               	goto	l967
  1187  06D1  09FB               	comf	___awmod@dividend,f
  1188  06D2  09FC               	comf	___awmod@dividend+1,f
  1189  06D3  0AFB               	incf	___awmod@dividend,f
  1190  06D4  1903               	skipnz
  1191  06D5  0AFC               	incf	___awmod@dividend+1,f
  1192  06D6                     l967:	
  1193  06D6  087C               	movf	___awmod@dividend+1,w
  1194  06D7  00FA               	movwf	?___awmod+1
  1195  06D8  087B               	movf	___awmod@dividend,w
  1196  06D9  00F9               	movwf	?___awmod
  1197  06DA  0008               	return
  1198  06DB                     __end_of___awmod:	
  1199                           
  1200                           	psect	text5
  1201  06DB                     __ptext5:	
  1202 ;; *************** function ___awdiv *****************
  1203 ;; Defined at:
  1204 ;;		line 6 in file "/opt/microchip/xc8/v1.45/sources/common/awdiv.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  divisor         2    0[COMMON] int 
  1207 ;;  dividend        2    2[COMMON] int 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  quotient        2    7[COMMON] int 
  1210 ;;  sign            1    6[COMMON] unsigned char 
  1211 ;;  counter         1    5[COMMON] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2    0[COMMON] int 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         4       0       0       0       0
  1222 ;;      Locals:         4       0       0       0       0
  1223 ;;      Temps:          1       0       0       0       0
  1224 ;;      Totals:         9       0       0       0       0
  1225 ;;Total ram usage:        9 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_disp7segX2
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function ___awdiv
  1236  06DB                     ___awdiv:	
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1240  06DB  01F6               	clrf	___awdiv@sign
  1241  06DC  1FF1               	btfss	___awdiv@divisor+1,7
  1242  06DD  2EE5               	goto	l897
  1243  06DE  09F0               	comf	___awdiv@divisor,f
  1244  06DF  09F1               	comf	___awdiv@divisor+1,f
  1245  06E0  0AF0               	incf	___awdiv@divisor,f
  1246  06E1  1903               	skipnz
  1247  06E2  0AF1               	incf	___awdiv@divisor+1,f
  1248  06E3  01F6               	clrf	___awdiv@sign
  1249  06E4  0AF6               	incf	___awdiv@sign,f
  1250  06E5                     l897:	
  1251  06E5  1FF3               	btfss	___awdiv@dividend+1,7
  1252  06E6  2EF0               	goto	l903
  1253  06E7  09F2               	comf	___awdiv@dividend,f
  1254  06E8  09F3               	comf	___awdiv@dividend+1,f
  1255  06E9  0AF2               	incf	___awdiv@dividend,f
  1256  06EA  1903               	skipnz
  1257  06EB  0AF3               	incf	___awdiv@dividend+1,f
  1258  06EC  3001               	movlw	1
  1259  06ED  00F4               	movwf	??___awdiv
  1260  06EE  0874               	movf	??___awdiv,w
  1261  06EF  06F6               	xorwf	___awdiv@sign,f
  1262  06F0                     l903:	
  1263  06F0  01F7               	clrf	___awdiv@quotient
  1264  06F1  01F8               	clrf	___awdiv@quotient+1
  1265  06F2  0870               	movf	___awdiv@divisor,w
  1266  06F3  0471               	iorwf	___awdiv@divisor+1,w
  1267  06F4  1903               	btfsc	3,2
  1268  06F5  2F27               	goto	l925
  1269  06F6  01F5               	clrf	___awdiv@counter
  1270  06F7  0AF5               	incf	___awdiv@counter,f
  1271  06F8                     l913:	
  1272  06F8  1BF1               	btfsc	___awdiv@divisor+1,7
  1273  06F9  2F06               	goto	l915
  1274  06FA  3001               	movlw	1
  1275  06FB                     u445:	
  1276  06FB  1003               	clrc
  1277  06FC  0DF0               	rlf	___awdiv@divisor,f
  1278  06FD  0DF1               	rlf	___awdiv@divisor+1,f
  1279  06FE  3EFF               	addlw	-1
  1280  06FF  1D03               	skipz
  1281  0700  2EFB               	goto	u445
  1282  0701  3001               	movlw	1
  1283  0702  00F4               	movwf	??___awdiv
  1284  0703  0874               	movf	??___awdiv,w
  1285  0704  07F5               	addwf	___awdiv@counter,f
  1286  0705  2EF8               	goto	l913
  1287  0706                     l915:	
  1288  0706  3001               	movlw	1
  1289  0707                     u465:	
  1290  0707  1003               	clrc
  1291  0708  0DF7               	rlf	___awdiv@quotient,f
  1292  0709  0DF8               	rlf	___awdiv@quotient+1,f
  1293  070A  3EFF               	addlw	-1
  1294  070B  1D03               	skipz
  1295  070C  2F07               	goto	u465
  1296  070D  0871               	movf	___awdiv@divisor+1,w
  1297  070E  0273               	subwf	___awdiv@dividend+1,w
  1298  070F  1D03               	skipz
  1299  0710  2F13               	goto	u475
  1300  0711  0870               	movf	___awdiv@divisor,w
  1301  0712  0272               	subwf	___awdiv@dividend,w
  1302  0713                     u475:	
  1303  0713  1C03               	skipc
  1304  0714  2F1C               	goto	l921
  1305  0715  0870               	movf	___awdiv@divisor,w
  1306  0716  02F2               	subwf	___awdiv@dividend,f
  1307  0717  0871               	movf	___awdiv@divisor+1,w
  1308  0718  1C03               	skipc
  1309  0719  03F3               	decf	___awdiv@dividend+1,f
  1310  071A  02F3               	subwf	___awdiv@dividend+1,f
  1311  071B  1477               	bsf	___awdiv@quotient,0
  1312  071C                     l921:	
  1313  071C  3001               	movlw	1
  1314  071D                     u485:	
  1315  071D  1003               	clrc
  1316  071E  0CF1               	rrf	___awdiv@divisor+1,f
  1317  071F  0CF0               	rrf	___awdiv@divisor,f
  1318  0720  3EFF               	addlw	-1
  1319  0721  1D03               	skipz
  1320  0722  2F1D               	goto	u485
  1321  0723  3001               	movlw	1
  1322  0724  02F5               	subwf	___awdiv@counter,f
  1323  0725  1D03               	btfss	3,2
  1324  0726  2F06               	goto	l915
  1325  0727                     l925:	
  1326  0727  0876               	movf	___awdiv@sign,w
  1327  0728  1903               	btfsc	3,2
  1328  0729  2F2F               	goto	l929
  1329  072A  09F7               	comf	___awdiv@quotient,f
  1330  072B  09F8               	comf	___awdiv@quotient+1,f
  1331  072C  0AF7               	incf	___awdiv@quotient,f
  1332  072D  1903               	skipnz
  1333  072E  0AF8               	incf	___awdiv@quotient+1,f
  1334  072F                     l929:	
  1335  072F  0878               	movf	___awdiv@quotient+1,w
  1336  0730  00F1               	movwf	?___awdiv+1
  1337  0731  0877               	movf	___awdiv@quotient,w
  1338  0732  00F0               	movwf	?___awdiv
  1339  0733  0008               	return
  1340  0734                     __end_of___awdiv:	
  1341                           
  1342                           	psect	text6
  1343  05F3                     __ptext6:	
  1344 ;; *************** function _botao_init *****************
  1345 ;; Defined at:
  1346 ;;		line 22 in file "botao.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		None
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0
  1363 ;;      Totals:         0       0       0       0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _botao_init
  1375  05F3                     _botao_init:	
  1376                           
  1377                           ;botao.c: 24: TRISDbits.TRISD2 = 1;
  1378                           
  1379                           ;incstack = 0
  1380                           ; Regs used in _botao_init: []
  1381  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  1382  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  1383  05F5  1508               	bsf	8,2	;volatile
  1384                           
  1385                           ;botao.c: 25: TRISDbits.TRISD3 = 1;
  1386  05F6  1588               	bsf	8,3	;volatile
  1387  05F7  0008               	return
  1388  05F8                     __end_of_botao_init:	
  1389                           
  1390                           	psect	text7
  1391  063F                     __ptext7:	
  1392 ;; *************** function _b1_bordaSubida *****************
  1393 ;; Defined at:
  1394 ;;		line 75 in file "botao.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  aux             1    1[COMMON] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      unsigned char 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         2       0       0       0       0
  1410 ;;      Temps:          1       0       0       0       0
  1411 ;;      Totals:         3       0       0       0       0
  1412 ;;Total ram usage:        3 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _b1_bordaSubida
  1423  063F                     _b1_bordaSubida:	
  1424                           
  1425                           ;botao.c: 79: char aux;
  1426                           ;botao.c: 80: aux = PORTDbits.RD3 && !b1Anterior;
  1427                           
  1428                           ;incstack = 0
  1429                           ; Regs used in _b1_bordaSubida: [wreg+status,2+status,0]
  1430  063F  01F2               	clrf	_b1_bordaSubida$122
  1431  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0642  1D88               	btfss	8,3	;volatile
  1434  0643  2E49               	goto	l997
  1435  0644  083D               	movf	_b1Anterior,w
  1436  0645  1D03               	btfss	3,2
  1437  0646  2E49               	goto	l997
  1438  0647  01F2               	clrf	_b1_bordaSubida$122
  1439  0648  0AF2               	incf	_b1_bordaSubida$122,f
  1440  0649                     l997:	
  1441  0649  0872               	movf	_b1_bordaSubida$122,w
  1442  064A  00F0               	movwf	??_b1_bordaSubida
  1443  064B  0870               	movf	??_b1_bordaSubida,w
  1444  064C  00F1               	movwf	b1_bordaSubida@aux
  1445                           
  1446                           ;botao.c: 81: b1Anterior = PORTDbits.RD3;
  1447  064D  3000               	movlw	0
  1448  064E  1988               	btfsc	8,3	;volatile
  1449  064F  3001               	movlw	1
  1450  0650  00BD               	movwf	_b1Anterior
  1451                           
  1452                           ;botao.c: 82: return( aux );
  1453  0651  0871               	movf	b1_bordaSubida@aux,w
  1454  0652  0008               	return
  1455  0653                     __end_of_b1_bordaSubida:	
  1456                           
  1457                           	psect	text8
  1458  062B                     __ptext8:	
  1459 ;; *************** function _b0_bordaDescida *****************
  1460 ;; Defined at:
  1461 ;;		line 46 in file "botao.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  aux             1    1[COMMON] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      unsigned char 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         2       0       0       0       0
  1477 ;;      Temps:          1       0       0       0       0
  1478 ;;      Totals:         3       0       0       0       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _b0_bordaDescida
  1490  062B                     _b0_bordaDescida:	
  1491                           
  1492                           ;botao.c: 50: char aux;
  1493                           ;botao.c: 51: aux = !PORTDbits.RD2 && b0Anterior;
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in _b0_bordaDescida: [wreg+status,2+status,0]
  1497  062B  01F2               	clrf	_b0_bordaDescida$114
  1498  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1499  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1500  062E  1908               	btfsc	8,2	;volatile
  1501  062F  2E35               	goto	l981
  1502  0630  083E               	movf	_b0Anterior,w
  1503  0631  1903               	btfsc	3,2
  1504  0632  2E35               	goto	l981
  1505  0633  01F2               	clrf	_b0_bordaDescida$114
  1506  0634  0AF2               	incf	_b0_bordaDescida$114,f
  1507  0635                     l981:	
  1508  0635  0872               	movf	_b0_bordaDescida$114,w
  1509  0636  00F0               	movwf	??_b0_bordaDescida
  1510  0637  0870               	movf	??_b0_bordaDescida,w
  1511  0638  00F1               	movwf	b0_bordaDescida@aux
  1512                           
  1513                           ;botao.c: 52: b0Anterior = PORTDbits.RD2;
  1514  0639  3000               	movlw	0
  1515  063A  1908               	btfsc	8,2	;volatile
  1516  063B  3001               	movlw	1
  1517  063C  00BE               	movwf	_b0Anterior
  1518                           
  1519                           ;botao.c: 53: return( aux );
  1520  063D  0871               	movf	b0_bordaDescida@aux,w
  1521  063E  0008               	return
  1522  063F                     __end_of_b0_bordaDescida:	
  1523  007E                     btemp	set	126	;btemp
  1524  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awmod
    _disp7segX2_init->_delay
    _disp7segX2->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    _main->_disp7segX2
    _disp7segX2->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2463
                                              5 BANK0      7     7      0
                            ___awmod
                    _b0_bordaDescida
                     _b1_bordaSubida
                         _botao_init
                              _delay
                         _disp7segX2
                    _disp7segX2_init
 ---------------------------------------------------------------------------------
 (1) _disp7segX2_init                                      0     0      0     288
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     288
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _disp7segX2                                           3     3      0    1064
                                              2 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     614
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _botao_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b1_bordaSubida                                       3     3      0      47
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _b0_bordaDescida                                      3     3      0      47
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
     ___awdiv (ARG)
   _b0_bordaDescida
   _b1_bordaSubida
   _botao_init
   _delay
   _disp7segX2
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _disp7segX2_init
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 14 01:50:52 2020

                       pc 0002                        l80 0738                        l82 0753  
              _b0Anterior 003E              ___awdiv@sign 0076                        fsr 0004  
              _b1Anterior 003D                       l101 07C6                       l106 07DF  
                     l903 06F0                       l921 071C                       l913 06F8  
                     l915 0706                       l925 0727                       l941 069A  
                     l929 072F                       l953 06A7                       l945 06A1  
                     l955 06B5                       l963 06CE                       l981 0635  
                     l967 06D6                       l959 06C3                       l887 0619  
                     l897 06E5                       l997 0649                       u445 06FB  
                     u465 0707                       u545 06AA                       u475 0713  
                     u485 071D                       u565 06BB                       u575 06C4  
                     u797 061F   __end_of_b0_bordaDescida 063F                       fsr0 0004  
                     indf 0000              ___awmod@sign 0031            _b1_bordaSubida 063F  
            __CFG_LVP$OFF 0000                      l1103 079A                      l1041 077B  
                    l1113 07DB                      l1043 0783                      l1115 07E3  
                    _main 078D                      btemp 007E                      start 0000  
         _disp7segX2_init 0653                     ?_main 0070           __end_of___awdiv 0734  
           __CFG_WDTE$OFF 0000           __end_of___awmod 06DB           ___awdiv@divisor 0070  
  __end_of_b1_bordaSubida 0653           ___awdiv@counter 0075                     _PORTB 0006  
                   _TRISB 0086                     _delay 0619                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07ED              __end_of_main 07ED                    ??_main 0035  
      b0_bordaDescida@aux 0071           ?_b1_bordaSubida 0070          ?_b0_bordaDescida 0070  
                  ?_delay 0070          ___awdiv@dividend 0072                    _ANSELH 0189  
 __end_of_disp7segX2_init 068E                 ??___awdiv 0074                 ??___awmod 007D  
                  delay@t 0070          ___awdiv@quotient 0077           ___awmod@divisor 0079  
         ___awmod@counter 0030   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 05F8             __end_of_delay 062B                   ??_delay 0072  
              __pbssBANK0 003C          ?_disp7segX2_init 0070                __pmaintext 078D  
              _disp7segX2 0734                _botao_init 05F3                   ___awdiv 06DB  
                 ___awmod 068E          ??_b1_bordaSubida 0070                   __ptext1 0653  
                 __ptext2 0619                   __ptext3 0734                   __ptext4 068E  
                 __ptext5 06DB                   __ptext6 05F3                   __ptext7 063F  
                 __ptext8 062B          ___awmod@dividend 007B                   _posicao 003C  
                 main@num 003B      end_of_initialization 07FC               ?_disp7segX2 0070  
               _PORTBbits 0006                 _PORTDbits 0008        _b1_bordaSubida$122 0072  
               _TRISDbits 0088               ?_botao_init 0070       _b0_bordaDescida$114 0072  
__size_of_b0_bordaDescida 0014       start_initialization 07ED       __size_of_disp7segX2 0059  
__CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_botao_init 0005                init_fetch0 0608  
             __pdataBANK0 0020                 ___latbits 0002             __pcstackBANK0 0030  
       ??_b0_bordaDescida 0070  __size_of_disp7segX2_init 003B                  ?___awdiv 0070  
                ?___awmod 0079               _digitos7seg 0020            __size_of_delay 0012  
            ??_disp7segX2 0032              ??_botao_init 0070        __end_of_disp7segX2 078D  
           disp7segX2@num 0034        __end_of_botao_init 05F8          __size_of___awdiv 0059  
        __size_of___awmod 004D         ??_disp7segX2_init 0073         b1_bordaSubida@aux 0071  
                _main$188 0039   __size_of_b1_bordaSubida 0014             __size_of_main 0060  
                init_ram0 060C           _b0_bordaDescida 062B  
